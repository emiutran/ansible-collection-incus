---
- hosts: localhost
  connection: local
  tasks:
    - name: Create a profile for Containers
      kmpm.incus.incus_profile:
        name: container-profile
        description: Profile for Containers
        config: {}
        devices:
          eth0:
            name: eth0
            network: default
            type: nic
          root:
            path: /
            pool: local
            type: disk
        project: default

    - name: Create container on another node
      kmpm.incus.incus_instance:
        name: c01
        type: container 
        state: started
        ignore_volatile_options: true
        wait_for_ipv4_addresses: true
        profiles: ["container-profile"]
        source:
          protocol: simplestreams
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          alias: debian/12
        timeout: 600
    - name: Create container on another node
      kmpm.incus.incus_instance:
        name: c02
        type: container
        state: started
        ignore_volatile_options: true
        wait_for_ipv4_addresses: true
        profiles: ["container-profile"]
        source:
          protocol: simplestreams
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          alias: debian/12
        timeout: 600
    - name: Create container on another node
      kmpm.incus.incus_instance:
        name: c03
        type: container
        state: started
        ignore_volatile_options: true
        wait_for_ipv4_addresses: true
        profiles: ["container-profile"]
        source:
          protocol: simplestreams
          type: image
          mode: pull
          server: https://images.linuxcontainers.org
          alias: debian/12
        timeout: 600  

    - name: Create network ACL
      kmpm.incus.incus_network_acl:
        name: restricted-network
        description: Restrict to 172.16.0.0/12
        ingress:
          - action: allow
            state: enabled
        egress:
          - action: allow
            description: Allow connection only this IP range.
            destination: "172.16.0.0/12"
            state: enabled
        state: present
  
    - name: Get load balancer IPs
      ansible.builtin.shell:
        cmd: ./ip.py
    
    - name: Load Dynamic LB IPs
      include_vars: lb_ip.yaml

    - name: Render load balancer config
      ansible.builtin.template: 
        src: templates/load_balancer.j2
        dest: rendered_lb.yaml
          
    - name: Create a load balancer
      kmpm.incus.incus_network_load_balancer:
        network: default
        listen_address: "{{ listen_address }}"
        description: Load balancer
        config:
          healthcheck: "true"
          healthcheck.failure_count: "3"
          healthcheck.interval: "5"
          healthcheck.success_count: "3"
          healthcheck.timeout: "20"
        backends: "{{ backends }}"
        ports:
          - description: SSH
            protocol: tcp
            listen_port: 22
            target_backend:
              - c01
              - c02
              - c03
